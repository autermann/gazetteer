<?xml version="1.0" encoding="UTF-8" ?>
<config>
  <luceneMatchVersion>4.10.3</luceneMatchVersion>

  <dataDir>${solr.dataDir:}</dataDir>

  <directoryFactory name="DirectoryFactory" class="${solr.directoryFactory:solr.NRTCachingDirectoryFactory}" />
  <codecFactory class="solr.SchemaCodecFactory"/>
  <schemaFactory class="ClassicIndexSchemaFactory"/>

  <indexConfig>
     <lockType>${solr.lock.type:native}</lockType>
     <infoStream>true</infoStream>
     <checkIntegrityAtMerge>false</checkIntegrityAtMerge>
  </indexConfig>

  <updateHandler class="solr.DirectUpdateHandler2">
    <updateLog>
      <str name="dir">${solr.ulog.dir:}</str>
    </updateLog>
    <autoCommit> 
      <maxTime>${solr.autoCommit.maxTime:15000}</maxTime> 
      <openSearcher>false</openSearcher> 
    </autoCommit>
    <autoSoftCommit> 
      <maxTime>${solr.autoSoftCommit.maxTime:-1}</maxTime> 
    </autoSoftCommit>
  </updateHandler>

  <query>
    <maxBooleanClauses>1024</maxBooleanClauses>

    <filterCache class="solr.FastLRUCache" size="512" initialSize="512" autowarmCount="0" />
    <queryResultCache class="solr.LRUCache" size="512" initialSize="512" autowarmCount="0" />
    <documentCache class="solr.LRUCache" size="512" initialSize="512" autowarmCount="0" />
    <cache name="perSegFilter" class="solr.LRUCache" size="10" initialSize="0" autowarmCount="10" regenerator="solr.NoOpRegenerator" />
    <enableLazyFieldLoading>true</enableLazyFieldLoading>

   <queryResultWindowSize>20</queryResultWindowSize>
   <queryResultMaxDocsCached>200</queryResultMaxDocsCached>
   <listener event="newSearcher" class="solr.QuerySenderListener">
     <arr name="queries" />
   </listener>
   <listener event="firstSearcher" class="solr.QuerySenderListener">
     <arr name="queries" />
   </listener>
   <useColdSearcher>true</useColdSearcher>
   <maxWarmingSearchers>2</maxWarmingSearchers>

  </query>

  <requestDispatcher handleSelect="false" >
    <requestParsers enableRemoteStreaming="true" 
                    multipartUploadLimitInKB="2048000"
                    formdataUploadLimitInKB="2048"
                    addHttpRequestToContext="false"/>

     <httpCaching never304="false" lastModifiedFrom="dirLastMod" etagSeed="gazetteer-v1">
       <cacheControl>max-age=604800, public</cacheControl> 
     </httpCaching>
  </requestDispatcher>

  <requestHandler name="/select" class="solr.SearchHandler">
    <lst name="defaults">
      <str name="echoParams">explicit</str>
      <int name="rows">10</int>
      <str name="wt">json</str>
      <str name="indent">true</str>
      <str name="df">names</str>
    </lst>
  </requestHandler>

  <requestHandler name="/query" class="solr.SearchHandler">
     <lst name="defaults">
       <str name="echoParams">explicit</str>
       <int name="rows">20</int>
       <str name="wt">json</str>
       <str name="indent">false</str>
       <str name="defType">dismax</str>
       <str name="qf">name_exact^20 names_exact^20 name^10 names^1</str>
       <str name="fl">*,score</str>
      <str name="df">name_exact,names_exact,name,names</str>
     </lst>
  </requestHandler>

  <requestHandler name="/get" class="solr.RealTimeGetHandler">
    <lst name="defaults">
      <str name="omitHeader">true</str>
      <str name="wt">json</str>
      <str name="indent">true</str>
    </lst>
  </requestHandler>

  <requestHandler name="/export" class="solr.SearchHandler">
    <lst name="invariants">
      <str name="rq">{!xport}</str>
      <str name="wt">xsort</str>
      <str name="distrib">false</str>
    </lst>

    <arr name="components">
      <str>query</str>
    </arr>
  </requestHandler>

  <!-- request handlers are implicitly defined; see SOLR-6499
  <requestHandler name="/update" class="solr.UpdateRequestHandler">
    <lst name="defaults">
      <str name="update.chain">skip-empty</str>
    </lst>
  </requestHandler>
  <requestHandler name="/update/json" class="solr.UpdateRequestHandler">
    <lst name="defaults">
      <str name="stream.contentType">application/json</str>
    </lst>
  </requestHandler>
  <requestHandler name="/update/csv" class="solr.UpdateRequestHandler">
    <lst name="defaults">
      <str name="stream.contentType">application/csv</str>
    </lst>
  </requestHandler>
  -->

  <requestHandler name="/analysis/field" 
                  class="solr.FieldAnalysisRequestHandler"
                  startup="lazy" />


  <requestHandler name="/analysis/document" 
                  class="solr.DocumentAnalysisRequestHandler" 
                  startup="lazy" />

  <!-- Admin Handlers

       Admin Handlers - This will register all the standard admin
       RequestHandlers.  
    -->
  <requestHandler name="/admin/" class="solr.admin.AdminHandlers" />
  <!-- This single handler is equivalent to the following... -->
  <!--
     <requestHandler name="/admin/luke"       class="solr.admin.LukeRequestHandler" />
     <requestHandler name="/admin/system"     class="solr.admin.SystemInfoHandler" />
     <requestHandler name="/admin/plugins"    class="solr.admin.PluginInfoHandler" />
     <requestHandler name="/admin/threads"    class="solr.admin.ThreadDumpHandler" />
     <requestHandler name="/admin/properties" class="solr.admin.PropertiesRequestHandler" />
     <requestHandler name="/admin/file"       class="solr.admin.ShowFileRequestHandler" >
    -->
  <!-- If you wish to hide files under ${solr.home}/conf, explicitly
       register the ShowFileRequestHandler using the definition below. 
       NOTE: The glob pattern ('*') is the only pattern supported at present, *.xml will
             not exclude all files ending in '.xml'. Use it to exclude _all_ updates
    -->
  <!--
     <requestHandler name="/admin/file" class="solr.admin.ShowFileRequestHandler" >
       <lst name="invariants">
         <str name="hidden">synonyms.txt</str> 
         <str name="hidden">anotherfile.txt</str> 
         <str name="hidden">*</str> 
       </lst>
     </requestHandler>
    -->

  <!-- ping/healthcheck -->
  <requestHandler name="/admin/ping" class="solr.PingRequestHandler">
    <lst name="invariants">
      <str name="q">solrpingquery</str>
    </lst>
    <lst name="defaults">
      <str name="echoParams">all</str>
    </lst>
    <!-- An optional feature of the PingRequestHandler is to configure the 
         handler with a "healthcheckFile" which can be used to enable/disable 
         the PingRequestHandler.
         relative paths are resolved against the data dir 
      -->
    <!-- <str name="healthcheckFile">server-enabled.txt</str> -->
  </requestHandler>

  <!--
  <requestHandler name="/replication" class="solr.ReplicationHandler"> 
       To enable simple master/slave replication, uncomment one of the 
       sections below, depending on whether this solr instance should be
       the "master" or a "slave".  If this instance is a "slave" you will 
       also need to fill in the masterUrl to point to a real machine.
     <lst name="master">
       <str name="replicateAfter">commit</str>
       <str name="replicateAfter">startup</str>
       <str name="confFiles">schema.xml,stopwords.txt</str>
     </lst>
     <lst name="slave">
       <str name="masterUrl">http://your-master-hostname:8983/solr</str>
       <str name="pollInterval">00:00:60</str>
     </lst>
  </requestHandler>
  -->

  <!-- Search Components

       Search components are registered to SolrCore and used by 
       instances of SearchHandler (which can access them by name)
       
       By default, the following components are available:
       
       <searchComponent name="query"     class="solr.QueryComponent" />
       <searchComponent name="facet"     class="solr.FacetComponent" />
       <searchComponent name="mlt"       class="solr.MoreLikeThisComponent" />
       <searchComponent name="highlight" class="solr.HighlightComponent" />
       <searchComponent name="stats"     class="solr.StatsComponent" />
       <searchComponent name="debug"     class="solr.DebugComponent" />
   
       Default configuration in a requestHandler would look like:

       <arr name="components">
         <str>query</str>
         <str>facet</str>
         <str>mlt</str>
         <str>highlight</str>
         <str>stats</str>
         <str>debug</str>
       </arr>

       If you register a searchComponent to one of the standard names, 
       that will be used instead of the default.

       To insert components before or after the 'standard' components, use:
    
       <arr name="first-components">
         <str>myFirstComponentName</str>
       </arr>
    
       <arr name="last-components">
         <str>myLastComponentName</str>
       </arr>

       NOTE: The component registered with the name "debug" will
       always be executed after the "last-components" 
       
     -->
  
  <updateRequestProcessorChain name="skip-empty" default="true">
    <processor class="solr.processor.TrimFieldUpdateProcessorFactory" />
    <processor class="solr.processor.RemoveBlankFieldUpdateProcessorFactory" />
    <processor class="solr.processor.UniqFieldsUpdateProcessorFactory">
      <str name="fieldRegex">name_.*</str>
      <str name="fieldName">names</str>
      <str name="fieldRegex">administrative_unit_name_.*</str>
      <str name="fieldName">administrative_unit_names</str>
    </processor>
    <processor class="solr.processor.LogUpdateProcessorFactory" />
    <processor class="solr.processor.RunUpdateProcessorFactory" />
  </updateRequestProcessorChain>

  <queryResponseWriter name="xml" class="solr.XMLResponseWriter" />
  <queryResponseWriter name="json" class="solr.JSONResponseWriter"/>
  <queryResponseWriter name="python" class="solr.PythonResponseWriter"/>
  <queryResponseWriter name="ruby" class="solr.RubyResponseWriter"/>
  <queryResponseWriter name="php" class="solr.PHPResponseWriter"/>
  <queryResponseWriter name="phps" class="solr.PHPSerializedResponseWriter"/>
  <queryResponseWriter name="csv" class="solr.CSVResponseWriter"/>
  <queryResponseWriter name="schema.xml" class="solr.SchemaXmlResponseWriter"/>

  <queryResponseWriter name="json" class="solr.JSONResponseWriter" default="true">
    <str name="content-type">application/json; charset=UTF-8</str>
  </queryResponseWriter>
  
  <admin>
    <defaultQuery>*:*</defaultQuery>
  </admin>
</config>
